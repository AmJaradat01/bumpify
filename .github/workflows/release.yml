name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  checks: write

jobs:
  release:
    name: Release and Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '14'
          registry-url: 'https://registry.npmjs.org'

      - name: Install version-bumpify
        run: npm install -g version-bumpify

      - name: Install Dependencies
        run: npm install

      # Auto-bump the version using npm version and pass the correct version to bumpify
      - name: Auto-increment version and run bumpify
        id: bump_version
        run: |
          # Bump the patch version and capture the new version
          NEW_VERSION=$(npm version patch -m "chore: bump version to %s")
          # Run bumpify with the new version
          bumpify ${NEW_VERSION}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit and Push Version Bump
        run: |
          git config --global user.email "amjaradat01@gmail.com"
          git config --global user.name "Ali Jaradat"
          git add package.json package-lock.json README.md
          git commit -m "chore: bump version"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Publish to npm
      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Optionally create a GitHub release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump_version.outputs.NEW_VERSION }}
          release_name: Release v${{ steps.bump_version.outputs.NEW_VERSION }}
          draft: false
          prerelease: false
