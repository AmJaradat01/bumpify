name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  checks: write

jobs:
  release:
    name: Release and Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '14'
          registry-url: 'https://registry.npmjs.org'

      - name: Install version-bumpify
        run: npm install -g version-bumpify

      - name: Install Dependencies
        run: npm install

      # Commit uncommitted changes to clean the working directory
      - name: Commit changes before version bump
        run: |
          git config --global user.email "amjaradat01@gmail.com"
          git config --global user.name "Ali Jaradat"
          git add package.json package-lock.json
          git commit -m "chore: pre-version bump cleanup" || echo "No changes to commit"

      # Use version-bumpify to bump the version without 'v' prefix
      - name: Bump version using version-bumpify
        id: bump_version
        run: |
          # Example of setting the new version number
          NEW_VERSION="1.0.2" # You can dynamically calculate or set this value
          bumpify $NEW_VERSION
          
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Commit and push the new version to the main branch
      - name: Commit and Push Version Bump
        run: |
          git config --global user.email "amjaradat01@gmail.com"
          git config --global user.name "Ali Jaradat"
          git add package.json package-lock.json README.md
          git commit -m "chore: bump version to $NEW_VERSION"
          git push origin HEAD:main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Publish to npm
      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Optionally create a GitHub release
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: $NEW_VERSION
          release_name: Release $NEW_VERSION
          draft: false
          prerelease: false
